version: "3"

services:
  get-token:
    build: get-token
    depends_on:
      - web
    networks:
      - internal_network
    volumes:
      - ../:/misskey-test

  web:
    image: ${MISSKEY_IMAGE:-misskey/misskey:latest}
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./.config:/misskey/.config
    environment:
      - NODE_ENV=development

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    environment:
      - POSTGRES_PASSWORD=misskey-test
      - POSTGRES_USER=misskey-test
      - POSTGRES_DB=misskey
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

#  meilisearch:
#    restart: always
#    image: getmeili/meilisearch:v1.1.1
#    environment:
#      - MEILI_NO_ANALYTICS=true
#      - MEILI_ENV=production
#    env_file:
#      - .config/meilisearch.env
#    networks:
#      - internal_network
#    volumes:
#      - ./meili_data:/meili_data

networks:
  internal_network:
    internal: true
  external_network:
